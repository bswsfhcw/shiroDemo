<?xml version="1.0" encoding="UTF-8"?>
  <beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:cache="http://www.springframework.org/schema/cache" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
    xmlns:jee="http://www.springframework.org/schema/jee" 
    xmlns:jms="http://www.springframework.org/schema/jms" 
    xmlns:lang="http://www.springframework.org/schema/lang" 
   xmlns:mvc="http://www.springframework.org/schema/mvc" 
   xmlns:oxm="http://www.springframework.org/schema/oxm" 
   xmlns:task="http://www.springframework.org/schema/task" 
   xmlns:tx="http://www.springframework.org/schema/tx" 
   xmlns:util="http://www.springframework.org/schema/util" 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
     http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
     http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd
     http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.2.xsd
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
     http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd
     http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
     
     <!--扫描映射  -->
     <context:component-scan base-package="com.ssh"></context:component-scan>
     
     <!-- 引入property配置文件 -->
     <context:property-placeholder location="classpath:prop/jdbc.properties"></context:property-placeholder>
     <!-- 配置数据源 -->
     <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
         <property name="driverClassName" value="${jdbc.mysql.driverClassName}"></property>
        <property name="url" value="${jdbc.mysql.url}"></property>
         <property name="username" value="${jdbc.mysql.username}"></property>
         <property name="password" value="${jdbc.mysql.password}"></property>
         <!-- 初始化连接大小
         <property name="initialSize" value="${jdbc.initialSize}"></property> -->
         <!-- 连接池最大数量 
         <property name="maxActive" value="${jdbc.maxActive}"></property>-->
         <!-- 连接池最大空闲 -->
         <!-- <property name="maxIdle" value="${maxIdle}"></property> -->
         <!-- 连接池最小空闲 
         <property name="minIdle" value="${jdbc.minIdle}"></property>-->
        <!-- 获取连接最大等待时间 
         <property name="maxWait" value="${jdbc.maxWait}"></property>-->
     </bean>
     
     <!-- 配置SessionFactory -->
     <bean class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory">
         <property name="dataSource" ref="dataSource"></property>
         <property name="hibernateProperties">
             <props>
                 <prop key="hibernate.dialect">${jdbc.mysql.dialect}</prop>
                 <prop key="hibernate.hbm2ddl.auto">update</prop>
                 <!--是否显示sql语句 我在这里是显示的  -->
                 <prop key="hibernate.show_sql">true</prop>
                 <!--格式化显示sql语句  -->
                 <prop key="hibernate.format_sql">true</prop>
             </props>
         </property>
         <!-- 自动扫描制定位置下的实体进行映射  --> 
         <property name="packagesToScan" value="com.ssh.entity"></property>
     </bean>
     
     <!-- 配置一个事务管理器 -->
     <bean class="org.springframework.orm.hibernate4.HibernateTransactionManager" id="transactionManager">
         <property name="sessionFactory" ref="sessionFactory">
     </property></bean>
     
     <!-- 应该是开启事物 -->
     <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
     
     <!-- baseDao -->
     <bean id="dao" class="com.ssh.dao.BaseDaoImpl">
         <property name="sessionFactory" ref="sessionFactory"></property>
     </bean>
 </beans>