<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!--开启shiro的注解 -->
	<bean id="advisorAutoProxyCreator"
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<property name="proxyTargetClass" value="true"></property>
	</bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor" />
	<!--注入自定义的Realm -->
	<bean id="customRealm" class="com.test.realm.CustomRealm">
		 <!-- businessManager 用来实现用户名密码的查询 -->
        <!-- <property name="accountService" ref="accountService" /> -->
	</bean>
	<!--  注册安全管理器 shiro-all.jar -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="customRealm"></property>
	</bean>
	
<!-- 	 <bean id="accountService" class="com.ssh.service.AccountService"></bean>
 -->	<!-- shiro-all.jar filterChainDefinitions：apache shiro通过filterChainDefinitions参数来分配链接的过滤， 
		资源过滤有常用的以下几个参数： authc 表示需要认证的链接 perms[/url] 表示该链接需要拥有对应的资源/权限才能访问 roles[admin] 
		表示需要对应的角色才能访问 perms[admin:url] 表示需要对应角色的资源才能访问 -->
	<!--配置ShiroFilter -->
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<!--登入页面 -->
		<property name="loginUrl" value="/login.jsp"></property>
		<!--登入成功页面 -->
		<property name="successUrl" value="/index.jsp" />
		<property name="filters">
			<map>
				<!--退出过滤器 -->
				<!-- <entry key="logout" value-ref="logoutFilter" /> -->
			</map>
		</property>
		<!--URL的拦截 -->
		<property name="filterChainDefinitions">
			<value>
				/share = authc
				/logout = logout
			</value>
		</property>

	</bean>
	<!--自定义退出LogoutFilter -->
	<!-- <bean id="logoutFilter" class="com.test.filter.SystemLogoutFilter">
		<property name="redirectUrl" value="/login" />
	</bean> -->
</beans>